summarize (n = n()) %>%
mutate(freq = n / sum(n))
fm %>%
#filter(!is.na(smoke)) %>%
group_by(phenotype, DS1_SMOKE) %>%
summarize (n = n()) %>%
mutate(freq = n / sum(n))
unique(fm$smoke)
unique(fm$DS1_SMOKE)
a5 <- a4 %>% mutate(age_c = as.factor(
case_when(
bl_age < 50 ~ 1,
bl_age < 60 ~ 2,
bl_age >= 60 ~ 3)),
age_c2 = as.factor(case_when(
bl_age < 50 ~ 0,
bl_age >= 50 ~ 1
)),
age_c3 = as.factor(case_when(
bl_age < 45 ~ 0,
bl_age >= 45 ~ 1
)),
sex = as.factor(bl_sex),
menopause = case_when(
DS1_PMAG!="." |DS1_PMREA !="." | DS1_PMAG_A!="." |DS1_PMREA_A !="." ~ 1,
TRUE ~0
),
smoke = as.numeric(bl_smkpy),
smoke = as.factor(
case_when(
as.numeric(bl_smkpy) >= 20 ~ 1,
as.numeric(bl_smkpy) < 20 ~ 0)),
drink = as.factor(
case_when(
as.numeric(bl_drink) >= 5 ~ 1,      #drink 4 or more times per week
as.numeric(bl_drink) < 5 ~ 0
)),
physic = as.factor(bl_phy),
edu = as.factor(
case_when(
as.numeric(bl_edu) < 2 ~ 0,
as.numeric(bl_edu) >= 2 & as.numeric(bl_edu) < 4 ~ 1, #Middle school and highschool
as.numeric(bl_edu) >= 4 ~ 2
)),
outcome = as.factor(
case_when(
cancer_FU6 == "1st F/U case" & !cancer_FU1_1 %in% c("0", "11", "12") ~ cancer_FU1_1,
cancer_FU6 == "2nd F/U case" & !cancer_FU2_1 %in% c("0", "11", "12") ~ cancer_FU2_1,
cancer_FU6 == "3rd F/U case" & !cancer_FU3_1 %in% c("0", "11", "12") ~ cancer_FU3_1,
cancer_FU6 == "4th F/U case" & !cancer_FU4_1 %in% c("0", "11", "12") ~ cancer_FU4_1,
cancer_FU6 == "5th F/U case" & !cancer_FU5_1 %in% c("0", "11", "12") ~ cancer_FU5_1,
cancer_FU6 == "1" & !cancer_FU6_1 %in% c("0", "11", "12") ~ cancer_FU6_1,
cancer_FU6 == "1st F/U case" & cancer_FU1_1 %in% c("0", "11", "12") & !cancer_FU1_2 %in% c("0", "11", "12") ~ cancer_FU1_2,
cancer_FU6 == "2nd F/U case" & cancer_FU2_1 %in% c("0", "11", "12") & !cancer_FU2_2 %in% c("0", "11", "12") ~ cancer_FU2_2,
cancer_FU6 == "3rd F/U case" & cancer_FU3_1 %in% c("0", "11", "12") & !cancer_FU3_2 %in% c("0", "11", "12") ~ cancer_FU3_2,
cancer_FU6 == "4th F/U case" & cancer_FU4_1 %in% c("0", "11", "12") & !cancer_FU4_2 %in% c("0", "11", "12") ~ cancer_FU4_2,
cancer_FU6 == "5th F/U case" & cancer_FU5_1 %in% c("0", "11", "12") & !cancer_FU5_2 %in% c("0", "11", "12") ~ cancer_FU5_2,
cancer_FU6 == "1" & cancer_FU6_1 %in% c("0", "11", "12") & !cancer_FU6_2 %in% c("0", "11", "12") ~ cancer_FU6_2,
cancer_FU6 == "1st F/U case" & cancer_FU1_1 %in% c("0", "11", "12") & cancer_FU1_2 %in% c("0", "11", "12") & !cancer_FU1_3 %in% c("0", "11", "12") ~ cancer_FU1_3,
cancer_FU6 == "2nd F/U case" & cancer_FU2_1 %in% c("0", "11", "12") & cancer_FU2_2 %in% c("0", "11", "12") & !cancer_FU2_3 %in% c("0", "11", "12") ~ cancer_FU2_3,
cancer_FU6 == "3rd F/U case" & cancer_FU3_1 %in% c("0", "11", "12") & cancer_FU3_2 %in% c("0", "11", "12") & !cancer_FU3_3 %in% c("0", "11", "12") ~ cancer_FU3_3,
cancer_FU6 == "4th F/U case" & cancer_FU4_1 %in% c("0", "11", "12") & cancer_FU4_2 %in% c("0", "11", "12") & !cancer_FU4_3 %in% c("0", "11", "12") ~ cancer_FU4_3,
cancer_FU6 == "5th F/U case" & cancer_FU5_1 %in% c("0", "11", "12") & cancer_FU5_2 %in% c("0", "11", "12") & !cancer_FU5_3 %in% c("0", "11", "12") ~ cancer_FU5_3,
cancer_FU6 == "1" & cancer_FU6_1 %in% c("0", "11", "12") & cancer_FU6_2 %in% c("0", "11", "12") & !cancer_FU6_3 %in% c("0", "11", "12") ~ cancer_FU6_3,
# For DS and NC dataset, only consider cancer_FU_1 (NCB/DS1_CA_NA1), ignore cancer_FU_2 (NCB/DS1_CA_NA2)
cancer_FU == "1" & !cancer_FU_1 %in% c("0", "11", "12") ~ cancer_FU_1,
TRUE ~ ""
)),
status =
case_when(
outcome == "" ~ 0,
TRUE ~ 1),
gastric =                                    #SHOULD EXCLUDE OTHER CANCERS BEFORE ANALYSIS?
case_when(
outcome == 1 ~ 1,
TRUE ~ 0),
liver =
case_when(
outcome == 2 ~ 1,
TRUE ~ 0),
colorectal =                                 #대장 colorectal or colon?
case_when(
outcome == 3 ~ 1,
TRUE ~ 0),
breast =
case_when(
outcome == 4 ~ 1,
TRUE ~ 0),
cervical =
case_when(
outcome == 5 ~ 1,
TRUE ~ 0),
lung =
case_when(
outcome == 6 ~ 1,
TRUE ~ 0),
thyroid =
case_when(
outcome == 7 ~ 1,
TRUE ~ 0),
prostate =
case_when(
outcome == 8 ~ 1,
TRUE ~ 0),
bladder =
case_when(
outcome == 9 ~ 1,
TRUE ~ 0),
status_t =
case_when(
status == 1 & thyroid !=1 ~ 1,
TRUE ~0),
diff_days_as =
case_when(
cancer_FU6 == "1st F/U case" ~ ymd(as.numeric(AS2_EDATE2)*100+15) - ymd(as.numeric(AS1_EDATE1)*100+15),
cancer_FU6 == "1st F/U Exclude case" ~ ymd(as.numeric(AS2_EDATE2)*100+15) - ymd(as.numeric(AS1_EDATE1)*100+15),
cancer_FU6 == "2nd F/U case" ~ ymd(as.numeric(AS3_EDATE3)*100+15) - ymd(as.numeric(AS1_EDATE1)*100+15),
cancer_FU6 == "2nd F/U Exclude case" ~ ymd(as.numeric(AS3_EDATE3)*100+15) - ymd(as.numeric(AS1_EDATE1)*100+15),
cancer_FU6 == "3rd F/U case" ~ ymd(as.numeric(AS4_EDATE4)*100+15) - ymd(as.numeric(AS1_EDATE1)*100+15),
cancer_FU6 == "3rd F/U Exclude case" ~ ymd(as.numeric(AS4_EDATE4)*100+15) - ymd(as.numeric(AS1_EDATE1)*100+15),
cancer_FU6 == "4th F/U case" ~ ymd(as.numeric(AS5_EDATE5)*100+15) - ymd(as.numeric(AS1_EDATE1)*100+15),
cancer_FU6 == "4th F/U Exclude case" ~ ymd(as.numeric(AS5_EDATE5)*100+15) - ymd(as.numeric(AS1_EDATE1)*100+15),
cancer_FU6 == "5th F/U case" ~ ymd(as.numeric(AS6_EDATE6)*100+15) - ymd(as.numeric(AS1_EDATE1)*100+15),
cancer_FU6 == "5th F/U Exclude case" ~ ymd(as.numeric(AS6_EDATE6)*100+15) - ymd(as.numeric(AS1_EDATE1)*100+15),
cancer_FU6 == "6th F/U case" ~ ymd(as.numeric(AS7_EDATE7)*100+15) - ymd(as.numeric(AS1_EDATE1)*100+15),
cancer_FU6 == "6th F/U Exclude case" ~ ymd(as.numeric(AS7_EDATE7)*100+15) - ymd(as.numeric(AS1_EDATE1)*100+15),
AS7_EDATE7 != "." ~ ymd(as.numeric(AS7_EDATE7)*100+15) - ymd(as.numeric(AS1_EDATE1)*100+15),
AS6_EDATE6 != "." ~ ymd(as.numeric(AS6_EDATE6)*100+15) - ymd(as.numeric(AS1_EDATE1)*100+15),
AS5_EDATE5 != "." ~ ymd(as.numeric(AS5_EDATE5)*100+15) - ymd(as.numeric(AS1_EDATE1)*100+15),
AS4_EDATE4 != "." ~ ymd(as.numeric(AS4_EDATE4)*100+15) - ymd(as.numeric(AS1_EDATE1)*100+15),
AS3_EDATE3 != "." ~ ymd(as.numeric(AS3_EDATE3)*100+15) - ymd(as.numeric(AS1_EDATE1)*100+15),
AS2_EDATE2 != "." ~ ymd(as.numeric(AS2_EDATE2)*100+15) - ymd(as.numeric(AS1_EDATE1)*100+15),
TRUE ~  as.numeric(NA)),          #as.numeric(AS7_EDATE7) - ymd(as.numeric(AS1_EDATE1)*100+15)),
diff_days_nc =
case_when(
!NCF1_CA_AG %in% c("",".") ~ 365.25*(as.numeric(NCF1_CA_AG) - bl_age),
NCF1_CA_AG %in% c("",".") & !is.na(NCF1_EDATE) ~  as.numeric(ymd(as.numeric(NCF1_EDATE)*100+15) - ymd(as.numeric(NCB_EDATE)*100+15)),
TRUE ~ as.numeric(NA)),
DS2_CA1MO =
case_when(
!DS2_CA1MO %in% c(".","") ~ DS2_CA1MO,
TRUE ~ "6"
),
date1 = as.numeric(DS2_CA1YR)*10000 + as.numeric(DS2_CA1MO)*100 + 15,
date2 = as.numeric(DS2_CA2YR)*10000 + as.numeric(DS2_CA2MO)*100 + 15,
diff_days_ds =
case_when(
date2 >= date1 ~ ymd(date1) - ymd(DS1_EDATE*100 + 15),
date2 < date1 ~ ymd(date2) - ymd(DS1_EDATE*100 + 15),
is.na(date2) & !is.na(date1) ~ ymd(date1) - ymd(DS1_EDATE*100 + 15),
!is.na(date2) & is.na(date1) ~ ymd(date2) - ymd(DS1_EDATE*100 + 15),
is.na(date2) & is.na(date1) & !is.na(DS2_EDATE) ~ ymd(DS2_EDATE*100 + 15) - ymd(DS1_EDATE*100 + 15),
TRUE ~ as.numeric(NA)),
survtime = as.numeric(case_when(
!is.na(diff_days_as) ~ diff_days_as/365.25,
!is.na(diff_days_ds) ~ diff_days_ds/365.25,
!is.na(diff_days_nc) ~ diff_days_nc/365.25,
TRUE ~ as.numeric(NA)))
) %>% mutate(obese = as.numeric(bmi >= 25),
met_factor = trigly + hdl + fglucose + hypertension + waist, # + crp,
metabolic = case_when(
met_factor >= 3 ~ 1,                                #1
met_factor < 3 ~ 0),                                #1
phenotype =
as.factor(case_when(
metabolic == 0 & obese == 0 ~ "MHNW",
metabolic == 0 & obese == 1 ~ "MHO",
metabolic == 1 & obese == 0 ~ "MUNW",
metabolic == 1 & obese == 1 ~ "MUO")),
bmi_wc =
as.factor(case_when(
obese == 0 & waist == 0 ~ 0,
obese == 0 & waist == 1 ~ 1,
obese == 1 & waist == 0 ~ 2,
obese == 1 & waist == 1 ~ 3)),
bmi_hdl =
as.factor(case_when(
obese == 0 & hdl == 0 ~ 0,
obese == 0 & hdl == 1 ~ 1,
obese == 1 & hdl == 0 ~ 2,
obese == 1 & hdl == 1 ~ 3)),
smk_stt =
as.factor(case_when(
DS1_SMOKE == 1 | DS1_SMOKE_100 == 1 ~ 0,
DS1_SMOKE == 2 | DS1_SMOKE_100 == 2 ~ 1,
DS1_SMOKE == 3 | DS1_SMOKE_100 == 3 ~ 2,
))
)
ds <- a5 %>% filter(study==2
# 21th Feb
###########################
& (is.na(survtime)|survtime >0))   # Excluded 4 - survtime<0, thyroid=0; 5 - survtime=0, thyroid=1; 30 - survtime=0, thyroid=0 -> ?All included in baseline cases?
ml <- ds %>% filter(bl_sex == 1)
fm <- ds %>% filter(bl_sex == 2)
ds_1 <- ds %>% filter(survtime>=1)
ml_1 <- ds_1 %>% filter(bl_sex == 1)
fm_1 <- ds_1 %>% filter(bl_sex == 2)
ds %>% count(smk_stt)
length(ds)
length(ds[,1])
fm %>%
#filter(!is.na(smoke)) %>%
group_by(phenotype, smk_stt) %>%
summarize (n = n()) %>%
mutate(freq = n / sum(n))
fm %>% filter(!is.na(drink)) %>%
group_by(phenotype, drink) %>%
summarize (n = n()) %>%
mutate(freq = n / sum(n))
fm %>%
#filter(!is.na(physic)) %>%
group_by(phenotype, physic) %>%
summarize (n = n()) %>%
mutate(freq = n / sum(n))
fm %>%
#filter(!is.na(menopause)) %>%
group_by(phenotype, menopause) %>%
summarize (n = n()) %>%
mutate(freq = n / sum(n))
fm %>%
#filter(!is.na(hrt)) %>%
group_by(phenotype, hrt) %>%
summarize (n = n()) %>%
mutate(freq = n / sum(n))
fm %>%
#filter(!is.na(hrt)) %>%
group_by(phenotype, hrt) %>%
summarize (n = n()) %>%
mutate(freq = n / sum(n))
ds <- ds %>% mutate(hrt = as.factor(case_when(
DS1_HRTYN == "2" | DS1_HRTYN_A == "2" ~ 1,
DS1_HRTYN == "3" | DS1_HRTYN_A == "3" ~ 2,
TRUE ~ 0
)))
# 1st Jun
ds <- merge(ds, city[c("RID","DS1_HRTYN","DS1_HRTYN_A")],by="RID")    #city[which(colnames(city) %in% c("RID","DS1_HRTYN","DS1_HRTYN_A"))]
ds <- ds %>% mutate(hrt = as.factor(case_when(
DS1_HRTYN == "2" | DS1_HRTYN_A == "2" ~ 1,
DS1_HRTYN == "3" | DS1_HRTYN_A == "3" ~ 2,
TRUE ~ 0
)))
fm <- ds %>% filter(bl_sex == 2)
fm %>%
#filter(!is.na(thyroid)) %>%
group_by(phenotype, thyroid) %>%
summarize (n = n()) %>%
mutate(freq = n / sum(n))
fm %>%
#filter(!is.na(thyroid)) %>%
group_by(phenotype, thyroid) %>%
summarize (n = n()) %>%
mutate(freq = n / sum(n))
fm %>%
#filter(!is.na(hrt)) %>%
group_by(phenotype, hrt) %>%
summarize (n = n()) %>%
mutate(freq = n / sum(n))
# Male
ml %>% filter(!is.na(survtime)) %>%
group_by(phenotype) %>%
summarize(mean(survtime), sd(survtime))
#to display more than one digit after comma
options(pillar.sigfig=5)
ml %>% filter(!is.na(bl_age)) %>%
group_by(phenotype) %>%
summarize (mean(bl_age), sd(bl_age))
ml %>% filter(!is.na(bmi)) %>%
group_by(phenotype) %>%
summarize (mean(bmi), sd(bmi))
ml %>% filter(bl_sbp!=".") %>%
group_by(phenotype) %>%
summarize (mean(as.numeric(bl_sbp)), sd(as.numeric(bl_sbp)))
ml %>% filter(bl_dbp!=".") %>%
group_by(phenotype) %>%
summarize (mean(as.numeric(bl_dbp)), sd(as.numeric(bl_dbp)))
ml %>% filter(bl_tg!=".") %>%
group_by(phenotype) %>%
summarize (mean(as.numeric(bl_tg)), sd(as.numeric(bl_tg)))
ml %>% filter(bl_hdl!=".") %>%
group_by(phenotype) %>%
summarize (mean(as.numeric(bl_hdl)), sd(as.numeric(bl_hdl)))
ml %>% filter(bl_fglu!=".") %>%
group_by(phenotype) %>%
summarize (mean(as.numeric(bl_fglu)), sd(as.numeric(bl_fglu)))
ml %>% filter(bl_waist!=".") %>%
group_by(phenotype) %>%
summarize (mean(as.numeric(bl_waist)), sd(as.numeric(bl_waist)))
# ml %>%
#   group_by(phenotype, bl_phenotype) %>%
#   summarize (count = n())
ml %>% filter(!is.na(edu)) %>%
group_by(phenotype, edu) %>%
summarize (n = n()) %>%
mutate(freq = n / sum(n))
ml %>%
#filter(!is.na(smoke)) %>%
group_by(phenotype, smk_stt) %>%
summarize (n = n()) %>%
mutate(freq = n / sum(n))
ml %>% filter(!is.na(drink)) %>%
group_by(phenotype, drink) %>%
summarize (n = n()) %>%
mutate(freq = n / sum(n))
ml %>%
#filter(!is.na(physic)) %>%
group_by(phenotype, physic) %>%
summarize (n = n()) %>%
mutate(freq = n / sum(n))
sum(ds$survtime)
sum(as.numeric(ds$survtime))
View(ds$survtime)
View(na.omit(ds$survtime))
sum(na.omit(ds$survtime))
rm(list = ls())
library(tidyverse)
library(ggplot2)
library(stringr)
#library(lubridate)
setwd("C:/Users/ngocdung/Dropbox/Front-end developer/src/data-science-path/udacity-nanodegree/Project 2/Support materials")
list.files()
month_sales <- read.csv("p2-2010-pawdacity-monthly-sales-p2-2010-pawdacity-monthly-sales.csv", stringsAsFactors = F)
population <- read.csv("p2-partially-parsed-wy-web-scrape.csv", stringsAsFactors = F)
naics <- read.csv("p2-wy-453910-naics-data.csv", stringsAsFactors = F)
demographic <- read.csv("p2-wy-demographic-data.csv", stringsAsFactors = F)
#### Data wrangling ####
# Separate two columns by "|", rename some columns, remove N/A rows
population2 <- population %>%
separate(col=City.County,into=c("City","County"), sep='\\|') %>%   #"|" is a special character, escape twice
#str_replace_all(.$City," \\?","") %>%
mutate(
Estimate = parse_number(X2014.Estimate),
Census2010 = parse_number(X2010.Census),
Census2000 = parse_number(X2000.Census)) %>%
filter(City!='')
# Remove ?" characters
population2["City"] <- str_replace_all(population2$City,"\\?","")
# Remove trailing whitespace
population2["City"] <- trimws(population2$City)   #unique()
# Merge datasets by City
month_sales2 <- month_sales %>%
mutate(City = CITY) %>%
merge(., population2[which(colnames(population2) %in% c("City","Census2010"))], by="City") %>%
merge(., demographic, by="City") %>%
mutate(Total.sales = January+February+March+April+May+June+July+August+September+October+November+December)
# Calculate sum
apply(month_sales2[c("Census2010",
"Total.sales",
"Households.with.Under.18",
"Land.Area",
"Population.Density",
"Total.Families")],
2,sum)
# Calculate average
apply(month_sales2[c("Census2010",
"Total.sales",
"Households.with.Under.18",
"Land.Area",
"Population.Density",
"Total.Families")],
2,mean)
is_outlier <- function(vector) {
q25 <- unname(quantile(vector, 0.25))
q75 <- unname(quantile(vector, 0.75))
iqr <- q75 - q25
if(min(vector) < q25 - 1.5*iqr | max(vector) > q75 + 1.5*iqr) {
return(TRUE)
} else {
return(FALSE)
}
}
apply(month_sales2[c("Census2010",
"Total.sales",
"Households.with.Under.18",
"Land.Area",
"Population.Density",
"Total.Families")],
2,is_outlier)
summary(month_sales2[c("Census2010",
"Total.sales",
"Households.with.Under.18",
"Land.Area",
"Population.Density",
"Total.Families")])
View(month_sales2)
train <- month_sales2[c("Census2010",
"Total.sales",
"Households.with.Under.18",
"Land.Area",
"Population.Density",
"Total.Families")]
View(train)
row.names(train) <- row.names(month_sales2)
View(train)
View(month_sales2)
train <- month_sales2[c("City",
"Census2010",
"Total.sales",
"Households.with.Under.18",
"Land.Area",
"Population.Density",
"Total.Families")]
apply(train,2,is_outlier)
apply(train[-1],2,is_outlier)
is_outlier2 <- function(vector) {
q25 <- unname(quantile(vector, 0.25))
q75 <- unname(quantile(vector, 0.75))
iqr <- q75 - q25
for (i in vector){
if(min(vector) < q25 - 1.5*iqr | max(vector) > q75 + 1.5*iqr) {
return(TRUE)
} else {
return(FALSE)
}
}
}
is_outlier2(train$Census2010)
is_outlier2 <- function(vector) {
q25 <- unname(quantile(vector, 0.25))
q75 <- unname(quantile(vector, 0.75))
iqr <- q75 - q25
for (i in vector){
if(min(vector) < q25 - 1.5*iqr | max(vector) > q75 + 1.5*iqr) {
return(TRUE)
} else {
return(FALSE)
}
}
}
is_outlier2(train$Census2010)
is_outlier2 <- function(vector) {
q25 <- unname(quantile(vector, 0.25))
q75 <- unname(quantile(vector, 0.75))
iqr <- q75 - q25
a <- vector(mode="character", length=length(vector))
for (i in vector){
if(min(vector) < q25 - 1.5*iqr | max(vector) > q75 + 1.5*iqr) {
a[i] <- TRUE
} else {
a[i] <- FALSE
}
}
return(a)
}
is_outlier2(train$Census2010)
is_outlier2 <- function(vector) {
q25 <- unname(quantile(vector, 0.25))
q75 <- unname(quantile(vector, 0.75))
iqr <- q75 - q25
a <- vector(mode="boolean", length=length(vector))
for (i in vector){
if(min(vector) < q25 - 1.5*iqr | max(vector) > q75 + 1.5*iqr) {
a[i] <- TRUE
} else {
a[i] <- FALSE
}
}
return(a)
}
length(train$Census2010)
is_outlier2(train$Census2010)
?
?vector
is_outlier2 <- function(vector) {
q25 <- unname(quantile(vector, 0.25))
q75 <- unname(quantile(vector, 0.75))
iqr <- q75 - q25
a <- vector(mode="logical", length=length(vector))
for (i in vector){
if(min(vector) < q25 - 1.5*iqr | max(vector) > q75 + 1.5*iqr) {
a[i] <- TRUE
} else {
a[i] <- FALSE
}
}
return(a)
}
is_outlier2(train$Census2010)
is_outlier2 <- function(vector) {
q25 <- unname(quantile(vector, 0.25))
q75 <- unname(quantile(vector, 0.75))
iqr <- q75 - q25
a <- vector(mode="logical", length=length(vector))
for (i in length(vector)){
if(min(vector) < q25 - 1.5*iqr | max(vector) > q75 + 1.5*iqr) {
a[i] <- TRUE
} else {
a[i] <- FALSE
}
}
return(a)
}
is_outlier2(train$Census2010)
is_outlier2 <- function(vector) {
q25 <- unname(quantile(vector, 0.25))
q75 <- unname(quantile(vector, 0.75))
iqr <- q75 - q25
a <- vector(mode="logical", length=length(vector))
names(a) <- train$City
for (i in length(vector)){
if(min(vector) < q25 - 1.5*iqr | max(vector) > q75 + 1.5*iqr) {
a[i] <- TRUE
} else {
a[i] <- FALSE
}
}
return(a)
}
is_outlier2(train$Census2010)
apply(train[-1],2,is_outlier2)
write.csv("train_dataset.csv")
train %>% write.csv("train_dataset.csv")
write.csv(train, "training_dataset.csv",row.names = F)
